//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Email.ntpappsweb0007 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CemaWebServiceSoap", Namespace="http://Claro.com.do/")]
    public partial class CemaWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback EnviarSMSIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmailOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CemaWebService() {
            this.Url = global::Email.Properties.Settings.Default.Email_ntpappsweb0007_CemaWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event EnviarSMSIPCompletedEventHandler EnviarSMSIPCompleted;
        
        /// <remarks/>
        public event SendEmailCompletedEventHandler SendEmailCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Claro.com.do/SendSMS", RequestNamespace="http://Claro.com.do/", ResponseNamespace="http://Claro.com.do/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Respuestas SendSMS(string Texto, string Telefono, string Aplicacion, ePrioridad Prioridad, System.DateTime FechaExpira) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        Texto,
                        Telefono,
                        Aplicacion,
                        Prioridad,
                        FechaExpira});
            return ((Respuestas)(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string Texto, string Telefono, string Aplicacion, ePrioridad Prioridad, System.DateTime FechaExpira) {
            this.SendSMSAsync(Texto, Telefono, Aplicacion, Prioridad, FechaExpira, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string Texto, string Telefono, string Aplicacion, ePrioridad Prioridad, System.DateTime FechaExpira, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        Texto,
                        Telefono,
                        Aplicacion,
                        Prioridad,
                        FechaExpira}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Claro.com.do/EnviarSMSIP", RequestNamespace="http://Claro.com.do/", ResponseNamespace="http://Claro.com.do/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Respuestas EnviarSMSIP(string Texto, string Telefono, string Aplicacion, ePrioridad Prioridad, string DireccionIP, string Usuario, System.DateTime FechaExpira) {
            object[] results = this.Invoke("EnviarSMSIP", new object[] {
                        Texto,
                        Telefono,
                        Aplicacion,
                        Prioridad,
                        DireccionIP,
                        Usuario,
                        FechaExpira});
            return ((Respuestas)(results[0]));
        }
        
        /// <remarks/>
        public void EnviarSMSIPAsync(string Texto, string Telefono, string Aplicacion, ePrioridad Prioridad, string DireccionIP, string Usuario, System.DateTime FechaExpira) {
            this.EnviarSMSIPAsync(Texto, Telefono, Aplicacion, Prioridad, DireccionIP, Usuario, FechaExpira, null);
        }
        
        /// <remarks/>
        public void EnviarSMSIPAsync(string Texto, string Telefono, string Aplicacion, ePrioridad Prioridad, string DireccionIP, string Usuario, System.DateTime FechaExpira, object userState) {
            if ((this.EnviarSMSIPOperationCompleted == null)) {
                this.EnviarSMSIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnviarSMSIPOperationCompleted);
            }
            this.InvokeAsync("EnviarSMSIP", new object[] {
                        Texto,
                        Telefono,
                        Aplicacion,
                        Prioridad,
                        DireccionIP,
                        Usuario,
                        FechaExpira}, this.EnviarSMSIPOperationCompleted, userState);
        }
        
        private void OnEnviarSMSIPOperationCompleted(object arg) {
            if ((this.EnviarSMSIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnviarSMSIPCompleted(this, new EnviarSMSIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://Claro.com.do/SendEmail", RequestNamespace="http://Claro.com.do/", ResponseNamespace="http://Claro.com.do/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Respuestas SendEmail(ePrioridad Prioridad, string Asunto, string Texto, string Etiqueta, string Remitente, string Destinatario, string Copia, string Aplicacion, System.DateTime FechaExpira, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] f, string fileName) {
            object[] results = this.Invoke("SendEmail", new object[] {
                        Prioridad,
                        Asunto,
                        Texto,
                        Etiqueta,
                        Remitente,
                        Destinatario,
                        Copia,
                        Aplicacion,
                        FechaExpira,
                        f,
                        fileName});
            return ((Respuestas)(results[0]));
        }
        
        /// <remarks/>
        public void SendEmailAsync(ePrioridad Prioridad, string Asunto, string Texto, string Etiqueta, string Remitente, string Destinatario, string Copia, string Aplicacion, System.DateTime FechaExpira, byte[] f, string fileName) {
            this.SendEmailAsync(Prioridad, Asunto, Texto, Etiqueta, Remitente, Destinatario, Copia, Aplicacion, FechaExpira, f, fileName, null);
        }
        
        /// <remarks/>
        public void SendEmailAsync(ePrioridad Prioridad, string Asunto, string Texto, string Etiqueta, string Remitente, string Destinatario, string Copia, string Aplicacion, System.DateTime FechaExpira, byte[] f, string fileName, object userState) {
            if ((this.SendEmailOperationCompleted == null)) {
                this.SendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmailOperationCompleted);
            }
            this.InvokeAsync("SendEmail", new object[] {
                        Prioridad,
                        Asunto,
                        Texto,
                        Etiqueta,
                        Remitente,
                        Destinatario,
                        Copia,
                        Aplicacion,
                        FechaExpira,
                        f,
                        fileName}, this.SendEmailOperationCompleted, userState);
        }
        
        private void OnSendEmailOperationCompleted(object arg) {
            if ((this.SendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmailCompleted(this, new SendEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Claro.com.do/")]
    public enum ePrioridad {
        
        /// <remarks/>
        Ninguna,
        
        /// <remarks/>
        Baja,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Urgente,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://Claro.com.do/")]
    public partial class Respuestas {
        
        private int codigoField;
        
        private string respuestaField;
        
        /// <remarks/>
        public int Codigo {
            get {
                return this.codigoField;
            }
            set {
                this.codigoField = value;
            }
        }
        
        /// <remarks/>
        public string Respuesta {
            get {
                return this.respuestaField;
            }
            set {
                this.respuestaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Respuestas Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Respuestas)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void EnviarSMSIPCompletedEventHandler(object sender, EnviarSMSIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnviarSMSIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EnviarSMSIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Respuestas Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Respuestas)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SendEmailCompletedEventHandler(object sender, SendEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Respuestas Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Respuestas)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591